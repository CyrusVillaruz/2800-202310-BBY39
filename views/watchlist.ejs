<%- include("templates/header") %>
  <div class="container text-center">
    <div class="row">
      <h3 class="lead text-center">
        <%= (user) %>'s Watchlist
      </h3>
    </div>
  </div>
  <div class="container">
    <div class="row">
      <div class="col-10">
        <input type="text" id="search-bar" class="form-control" placeholder="Search watchlist...">
      </div>
      <div class="col-2 d-flex justify-content-center align-items-center" id="filter-button">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-funnel"
          viewBox="0 0 16 16">
          <path
            d="M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5v-2zm1 .5v1.308l4.372 4.858A.5.5 0 0 1 7 8.5v5.306l2-.666V8.5a.5.5 0 0 1 .128-.334L13.5 3.308V2h-11z" />
        </svg>
      </div>
    </div>
  </div>
  </br>
  <div id="filter-button-content"></div>
  <div class="d-flex justify-content-center">
    <div class="btn-group" role="group" aria-label="Watchlist Buttons">
      <button id="btnAll" class="btn  flex-fill btn-responsive">All Movies</button>
      <button id="btnPlanToWatch" class="btn  flex-fill btn-responsive">Plan to Watch</button>
      <button id="btnCurrentlyWatching" class="btn  flex-fill btn-responsive">Currently Watching</button>
      <button id="btnWatched" class="btn  flex-fill btn-responsive">Completed</button>
      <button id="btnDropped" class="btn  flex-fill btn-responsive">Dropped</button>
      </div>
  </div>
  </br>
  <div style="justify-content: center; display: flex;">
    <button id="btnRandomMovie" class="btn btn-responsive">Random Movie</button> <!-- New button for random movie selection -->
  </div>
  </br>
  <div id="movie-container" class="pb-5 mx-2">
    <!-- Your movie HTML here -->
  </div>

  <!-- Include Fuse.js from a CDN -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fuse.js/6.4.6/fuse.basic.min.js"></script>

  <script>
    var active = false;
    var fuse;
    var moviesList = [];  // hold all movies
    var selectedGenres = [];  // hold selected genres

    $(document).ready(function () {
      // Function to fetch and display the watchlist
      function fetchAndDisplayWatchlist() {
        $.ajax({
          url: '/display-watchlist',
          method: 'GET',
          success: function (movies) {
            // Filter movies based on the selected genres, if any
            if (selectedGenres.length > 0) {
              movies = movies.filter(movie => selectedGenres.every(genre => movie.Genre.includes(genre)));
            }

            // Store all movies
            moviesList = movies;

            // Display movies
            displayMovies(movies);

            // Initialize the Fuse instance with the movies and options
            const options = {
              keys: ['Title'],
              includeScore: true,
              threshold: 0.4,
            };
            fuse = new Fuse(movies, options);
          }
        });
      }

      $('#search-bar').on('input', function () {
        const searchString = $(this).val();
        if (searchString) {
          const result = fuse.search(searchString);
          displayMovies(result.map(res => res.item));
        } else {
          fetchAndDisplayWatchlist();
        }
      });

      $("#filter-button").on("click", function (event) {
        if ($(event.target).closest("#filter-button-content").length === 0) {
          if (!active) {
            $("#filter-button-content").html(`<%- include("templates/filter-checkboxes") %>`);
            active = true;

            // Detect changes in checkboxes
            $('.form-check-input').on('change', function () {
              const genre = $(this).val();
              if ($(this).is(':checked')) {
                // If checked, add genre to the selectedGenres array
                selectedGenres.push(genre);
              } else {
                // If unchecked, remove genre from the selectedGenres array
                const index = selectedGenres.indexOf(genre);
                if (index > -1) {
                  selectedGenres.splice(index, 1);
                }
              }
              fetchAndDisplayWatchlist();
            });

          } else {
            $("#filter-button-content").html(`<div></div>`);
            active = false;
            location.reload();
          }
        }
      });

      // Call the function to fetch and display the watchlist when the page loads
      fetchAndDisplayWatchlist();
    });

    // Event listeners for status buttons
    $('#btnPlanToWatch').click(function () {
      window.location.href = '/watchlist-planToWatch';
    });

    $('#btnCurrentlyWatching').click(function () {
      window.location.href = '/watchlist-currentlyWatching';
    });

    $('#btnWatched').click(function () {
      window.location.href = '/watchlist-watched';
    });

    $('#btnDropped').click(function () {
      window.location.href = '/watchlist-dropped';
    });
    $('#btnAll').click(function () {
      window.location.href = '/watchlist';
    });

    $('#btnRandomMovie').click(function () {
  // Filter movies from the entire watchlist
  const randomSelectedMovie = moviesList;

  if (randomSelectedMovie.length === 0) {
    // Handle case when there are no movies in the watchlist
    alert("No movies found in the watchlist.");
  } else {
    // Select a random movie from the filtered list
    const randomIndex = Math.floor(Math.random() * randomSelectedMovie.length);
    const randomMovie = randomSelectedMovie[randomIndex];
    window.location.href = `/movie/watchlist/${randomMovie._id}`;
  }
});


    function displayMovies(movies) {
      let moviesHtml = '';
      for (let i = 0; i < movies.length; i++) {
        const movie = movies[i];
        const words = movie.Overview.split(' ');
        const limitedWords = words.slice(0, 20);
        const limitedOverview = limitedWords.join(' ');
        const ellipsis = words.length > 20 ? '...' : '';

        moviesHtml += `
        <a href="/movie/watchlist/${movie._id}">
          <div class="p-3 mb-2 bg-secondary text-white" style="border-radius: 10px;">
            <div class="row">
              <div class="col-4 d-flex justify-content-center">
                <img src="${movie.Poster_Url}" style="max-height: 100px; max-width: auto;">
              </div>
              <div class="col-8">
                <p style="font-size: medium;"><b>${movie.Title}</b></br><i>${movie.Genre}</i></p>
                ${limitedOverview}&nbsp;${ellipsis}
              </div>
            </div>
          </div>
        </a>
      `;
      }
      $('#movie-container').html(moviesHtml);
    }
  </script>

<style>
  .btn-responsive {
  font-size: 16px; /* Default font size */
  background-color: #bbbbbb;
  color:black;
}

#btnAll {
  background-color: #ff8800;
} 

#btnRandomMovie {
  margin-right: -32px
}

@media (max-width: 600px) {
  .btn-responsive {
    font-size: 12px; /* Adjusted font size for smaller screens */
    background-color: #bbbbbb;
    color:black;
  }
  .btn-responsive:hover {
  background-color: #ff8800 !important; /* Change the color to your desired hover color */
  }
  #btnAll {
  background-color: #ff8800;
  } 
  #btnRandomMovie {
  margin-right: -23px
}
}

@media (max-width: 475px) {
  .btn-responsive {
    font-size: 10px; /* Adjusted font size for smaller screens */
    color:black;
    background-color: #bbbbbb;
  }
  .btn-responsive:hover {
  background-color: #ff8800 !important; /* Change the color to your desired hover color */
  }
  #btnAll {
  background-color: #ff8800;
  } 
  #btnRandomMovie {
  margin-right: -10px
}
}

.btn-responsive:hover {
  background-color: #ff8800 !important;
   /* Change the color to your desired hover color */
}
</style>

  <%- include("templates/bottomnav") %>